Nave(Id_nave,Id_banchina,nome_comandante,nome_armatore,porto_provenienza,porto_destinazione,capacita_n_container,calendario)
CREATE TABLE Nave (
Id_nave INT NOT NULL,
Id_banchina INT NOT NULL,
nome_comandante VARCHAR(45),
nome_armatore VARCHAR(45),
porto_provenienza VARCHAR(45),
porto_destinazione VARCHAR(45),
capacita_n_container INT NOT NULL,
primary key(Id_nave),
foreign key(Id_banchina) references Banchina(Id_banchina) on delete cascade)
engine=InnoDB;

Lista_appuntamento_nave(Id_listapp_nave,Id_operatore,nome_arrivo_nave,ora_arrivo_nave,data_arrivo_nave)
CREATE TABLE Lista_appuntamento_nave(
Id_listapp_nave INT NOT NULL,
Id_operatore INT NOT NULL,
nome_arrivo_nave VARCHAR(45),
ora_arrivo_nave DATETIME,
data_arrivo_nave date,
primary key(Id_listapp_nave),
foreign key(Id_operatore) references Operatore (Id_operatore) on delete cascade)
engine=InnoDB;

Banchina(Id_banchina,Id_operatore,carico_container,scarico_container)
CREATE TABLE Banchina (
Id_banchina INT NOT NULL,
Id_operatore INT NOT NULL,
carico_container VARCHAR(45),
scarico_container VARCHAR(45),
primary key(Id_banchina),
foreign key(Id_operatore) references Operatore(Id_operatore) on delete cascade)
engine=InnoDB;

Operatore(Id_operatore,nome,cognome,matricola)
CREATE TABLE Operatore(
Id_operatore INT NOT NULL,
nome VARCHAR(45),
cognome VARCHAR(45),
matricola VARCHAR(45),
primary key(Id_operatore))
engine=InnoDB;

Container(Id_container,Id_nave,Id_tir,Id_StackingArea,categoria,codice_iso_6344,info_generali,peso_totale,posizione,n_moloScarico,n_moloCarico)
CREATE TABLE Container (
Id_container INT NOT NULL,
Id_nave INT NOT NULL,
Id_tir INT NOT NULL,
Id_StackingArea INT NOT NULL,
categoria VARCHAR(45),
codice_iso_6344 VARCHAR(45),
info_generali VARCHAR(45),
peso_totale  float(4,5),
posizione VARCHAR(45),
n_moloScarico INT NOT NULL,
n_moloCarico INT NOT NULL,
primary key(Id_container),
foreign key(Id_nave) references Nave (Id_nave) on delete cascade,
foreign key(Id_StackingArea) references StackingArea (Id_StackingArea) on delete cascade,
foreign key(Id_tir) references Tir(Id_tir) on delete cascade)
engine=InnoDB;


Merce(Id_merce,Id_container,tipo_merce,peso_merce,categoria_merce)
CREATE TABLE Merce(
Id_merce INT NOT NULL,
Id_container INT NOT NULL,
tipo_merce VARCHAR(45),
peso_merce float(4,5),
categoria_merce VARCHAR(45),
primary key(Id_merce),
foreign key(Id_container) references Container(Id_container) on delete cascade)
engine=InnoDB;

Tir(Id_tir,dimensione,modello,targa)
CREATE TABLE Tir(
Id_tir INT NOT NULL,
dimensione float(4,5),
modello VARCHAR(45),
targa VARCHAR(45),
primary key(Id_tir))
engine=InnoDB;

Richiesta_tir_lista(Id_richiesta_Container,Id_camionista,Id_tir,data_ritiroContainer,ora_ritiroContainer,luogo)
CREATE TABLE Richiesta_tir_lista (
Id_richiesta_Container INT NOT NULL,
Id_camionista INT NOT NULL,
Id_tir INT NOT NULL,
data_ritiroContainer date,
ora_ritiroContainer DATETIME,
luogo VARCHAR(45),
primary key(Id_richiesta_Container),
foreign key(Id_camionista) references Camionista (Id_camionista) on delete cascade,
foreign key(Id_tir) references Tir(Id_tir) on delete cascade)
engine=InnoDB;

Carrello(Id_interfacciaCarrello,n_carrello,n_banchina)
CREATE TABLE Carrello(
Id_interfacciaCarrello INT NOT NULL,
n_carrello int not null,
n_banchina int not null,
primary key(Id_interfacciaCarrello))
engine=InnoDB;

StackingArea(Id_StackingArea,Id_interfacciaCarrello,n_posti_tot,posti_disponibili)
CREATE TABLE StackingArea(
Id_StackingArea INT NOT NULL,
Id_interfacciaCarrello INT NOT NULL,
n_posti int not null,
posti_disponibili int not null,
primary key(Id_StackingArea),
foreign key(Id_interfacciaCarrello) references Carrello(Id_interfacciaCarrello) on delete cascade)
engine=InnoDB;

Camionista(Id_camionista,nome,cognome,p_parcheggioassegnato,username,email,indirizzo,password)
CREATE TABLE Camionista(
Id_camionista INT NOT NULL,
nome VARCHAR(45),
cognome VARCHAR(45),
p_parcheggioassegnato VARCHAR(45),
username VARCHAR(50) NOT NULL UNIQUE,
email varchar(45),
indirizzo varchar(45),
password VARCHAR(255) NOT NULL,
primary key(Id_camionista))
engine=InnoDB;

